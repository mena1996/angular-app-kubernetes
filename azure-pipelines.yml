
# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
          - task: DockerCompose@0
            inputs:
              containerregistrytype: 'Azure Container Registry'
              azureContainerRegistry: '{"loginServer":"aksdemoin.azurecr.io", "id" : "/subscriptions/2c35fd44-4f87-4c44-aa8b-2452a31d16d1/resourceGroups/AKSDemo-rg/providers/Microsoft.ContainerRegistry/registries/AKSDemoin"}'
              dockerComposeFile: '**/docker-compose.yml'
              action: 'Build services'
              nopIfNoDockerComposeFile: true
               

              - task: DockerCompose@0
                inputs:
                  containerregistrytype: 'Azure Container Registry'
                  azureContainerRegistry: '{"loginServer":"aksdemoin.azurecr.io", "id" : "/subscriptions/2c35fd44-4f87-4c44-aa8b-2452a31d16d1/resourceGroups/AKSDemo-rg/providers/Microsoft.ContainerRegistry/registries/AKSDemoin"}'
                  dockerComposeFile: '**/docker-compose.yml'
                  action: 'Push services'
                  nopIfNoDockerComposeFile: true
                        
                    - task: CopyFiles@2
                      inputs:
                         SourceFolder: 'deployment.azure.yaml'
                          Contents: 'deployment.azure.yaml'
                            TargetFolder: '$(Build.ArtifactStagingDirectory)'
                    - task: PublishBuildArtifacts@1
                       inputs:
                       PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                       ArtifactName: 'drop'
                        publishLocation: 'Container'


          
 
